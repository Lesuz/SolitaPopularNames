[{"G:\\GitHub\\popularnames\\src\\App.js":"1","G:\\GitHub\\popularnames\\src\\reportWebVitals.js":"2","G:\\GitHub\\popularnames\\src\\index.js":"3"},{"size":3947,"mtime":1610724735057,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1608040444773,"results":"6","hashOfConfig":"5"},{"size":500,"mtime":1608040444773,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"1s9wz5o",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"G:\\GitHub\\popularnames\\src\\App.js",["15"],"\nimport './App.css';\nimport data from './names';\nimport {useState} from 'react';\nimport ReactDOM from 'react-dom';\n\n\n\nfunction App() {\n\n  const [list, setList] = useState(displayData);\n\n\n  // using reduce() to calculate amount of names in the array\n  const totalNames = data.names.reduce((amountOfNames, amountOfName) => amountOfNames + amountOfName.amount, 0)\n  console.log(totalNames)\n\n  function displayData() {\n    console.log(\"hi\")\n    \n    return (\n      <div>\n        <div>\n          <h2>Unordered List</h2>\n        </div>\n        <div className=\"names\">\n          <table>\n            <tbody>\n              <tr>\n                <th>Name</th>\n                <th>Amount</th>\n              </tr>\n              {data.names.map((item, i) => (\n              <tr key={i}>\n                <td>{item.name}</td>\n                <td>{item.amount}</td>\n              </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    )\n  }\n\n  function orderedByAmounts() {\n  // Order names by amounts and list output onto UI\n    console.log(\"orderedlist\")\n\n    data.names.sort(function(a,b) {\n      if(a.amount < b.amount) { return 1;}\n      if(a.amount > b.amount) { return -1;}\n      return 0;\n    })\n\n    const orderAmount = (\n      <div>\n        <div>\n          <h2>Ordered by amount</h2>\n        </div>\n        <div className=\"names\">\n          <table>\n            <tbody>\n              <tr>\n                <th>Name</th>\n                <th>Amount</th>\n              </tr>\n              {data.names.map((item, i) => (\n                <tr key={i}>\n                  <td>{item.name}</td>\n                  <td>{item.amount}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n    )\n    ReactDOM.render(orderAmount, document.getElementById('list'));\n  }\n  function orderedAplhabetically() {\n    // Order names in an alphabetical order and output onto UI\n    console.log(\"aplhabetically\")\n\n    data.names.sort(function(a,b) {\n      if(a.name < b.name) { return -1;}\n      if(a.name > b.name) { return 1;}\n      return 0;\n    })\n\n    const orderAplha = (\n      <div>\n        <div>\n          <h2>Ordered Aplhabetically</h2>\n        </div>\n        <div className=\"names\">\n          <table>\n            <tbody>\n              <tr>\n                <th>Name</th>\n                <th>Amount</th>\n              </tr>\n              {data.names.map((item, i) => (\n                <tr key={i}>\n                  <td>{item.name}</td>\n                  <td>{item.amount}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n\n    )\n    ReactDOM.render(orderAplha, document.getElementById('list'));\n  }\n\n  function searchForName() {\n    console.log(\"lookup name\")\n\n    const inputName = document.getElementsByName(\"name\")[0].value\n\n    console.log(inputName)\n\n    for(var i = 0; i < data.names.length; i++){\n      \n      if(inputName === \"Susanna\"){\n        console.log(\"HAIIII\")\n      }else {\n        console.log(\"Name not found\")\n      }\n    }\n  }\n\n  return (\n    <div>\n      <div className=\"header\">\n        <h1>Most popular names at <span>Solita</span></h1>\n      </div>\n      <div className=\"nameAmount\">\n        <h3>Names in total: {totalNames}</h3>\n      </div>\n      <div className=\"question\">\n        <p>How would like the names be displayed?</p>\n      </div>\n      <div className=\"buttons\">\n        <button \n          onClick={orderedByAmounts}\n        >Order by amount</button>\n        <p>or</p>\n        <button\n          onClick={orderedAplhabetically}\n        >Order aplhabetically</button>\n      </div>\n      <div>\n          <label>Name:</label>\n          <input placeholder=\"Search for name...\" type=\"text\" name=\"name\" />\n          <button onClick={searchForName}>Search</button>\n      </div>\n      <div className=\"list\" id=\"list\">\n        {list}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","G:\\GitHub\\popularnames\\src\\reportWebVitals.js",[],"G:\\GitHub\\popularnames\\src\\index.js",[],{"ruleId":"16","severity":1,"message":"17","line":11,"column":16,"nodeType":"18","messageId":"19","endLine":11,"endColumn":23},"no-unused-vars","'setList' is assigned a value but never used.","Identifier","unusedVar"]